[{"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\index.tsx":"1","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\App.tsx":"2","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\hooks\\useAppState.ts":"3","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\hooks\\useApi.ts":"4","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\utils\\helpers.ts":"5","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Card.tsx":"6","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Button.tsx":"7","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\PrivacyIndicator.tsx":"8","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Alert.tsx":"9","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\pages\\IngestionPage.tsx":"10","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\pages\\ChatPage.tsx":"11","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\pages\\UploadPage.tsx":"12","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\utils\\api.ts":"13","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\LoadingSpinner.tsx":"14","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Textarea.tsx":"15","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\ChatMessage.tsx":"16","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Input.tsx":"17","E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\FileUpload.tsx":"18"},{"size":288,"mtime":1760953280649,"results":"19","hashOfConfig":"20"},{"size":7201,"mtime":1760953265084,"results":"21","hashOfConfig":"20"},{"size":4559,"mtime":1760952857511,"results":"22","hashOfConfig":"20"},{"size":4834,"mtime":1760952883094,"results":"23","hashOfConfig":"20"},{"size":6089,"mtime":1760952829810,"results":"24","hashOfConfig":"20"},{"size":2279,"mtime":1760952948167,"results":"25","hashOfConfig":"20"},{"size":1258,"mtime":1760952900474,"results":"26","hashOfConfig":"20"},{"size":669,"mtime":1760952980105,"results":"27","hashOfConfig":"20"},{"size":1844,"mtime":1760952964938,"results":"28","hashOfConfig":"20"},{"size":12930,"mtime":1760953163725,"results":"29","hashOfConfig":"20"},{"size":14773,"mtime":1760953227629,"results":"30","hashOfConfig":"20"},{"size":9568,"mtime":1760953108357,"results":"31","hashOfConfig":"20"},{"size":3941,"mtime":1760952794934,"results":"32","hashOfConfig":"20"},{"size":537,"mtime":1760952994429,"results":"33","hashOfConfig":"20"},{"size":1192,"mtime":1760952928904,"results":"34","hashOfConfig":"20"},{"size":6311,"mtime":1760953056538,"results":"35","hashOfConfig":"20"},{"size":1156,"mtime":1760952914900,"results":"36","hashOfConfig":"20"},{"size":6012,"mtime":1760953024184,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lhwm22",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\index.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\App.tsx",["92"],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\hooks\\useAppState.ts",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\hooks\\useApi.ts",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\utils\\helpers.ts",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Card.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Button.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\PrivacyIndicator.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Alert.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\pages\\IngestionPage.tsx",["93","94","95"],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\pages\\ChatPage.tsx",["96"],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\pages\\UploadPage.tsx",["97"],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\utils\\api.ts",["98"],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\LoadingSpinner.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Textarea.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\ChatMessage.tsx",["99","100"],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\Input.tsx",[],[],"E:\\Nagendra\\projects\\PrivAI\\privai-app\\frontend\\src\\components\\FileUpload.tsx",["101","102"],[],{"ruleId":"103","severity":1,"message":"104","line":9,"column":3,"nodeType":"105","messageId":"106","endLine":9,"endColumn":7},{"ruleId":"103","severity":1,"message":"107","line":4,"column":3,"nodeType":"105","messageId":"106","endLine":4,"endColumn":8},{"ruleId":"103","severity":1,"message":"108","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":14},{"ruleId":"103","severity":1,"message":"109","line":35,"column":27,"nodeType":"105","messageId":"106","endLine":35,"endColumn":36},{"ruleId":"103","severity":1,"message":"110","line":5,"column":3,"nodeType":"105","messageId":"106","endLine":5,"endColumn":7},{"ruleId":"103","severity":1,"message":"111","line":10,"column":10,"nodeType":"105","messageId":"106","endLine":10,"endColumn":22},{"ruleId":"103","severity":1,"message":"112","line":10,"column":3,"nodeType":"105","messageId":"106","endLine":10,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":66,"column":20,"nodeType":"115","messageId":"116","endLine":66,"endColumn":31},{"ruleId":"117","severity":2,"message":"118","line":179,"column":1,"nodeType":"119","endLine":179,"endColumn":44,"fix":"120"},{"ruleId":"121","severity":1,"message":"122","line":48,"column":6,"nodeType":"123","endLine":48,"endColumn":8,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":58,"column":6,"nodeType":"123","endLine":58,"endColumn":8,"suggestions":"125"},"@typescript-eslint/no-unused-vars","'Lock' is defined but never used.","Identifier","unusedVar","'Pause' is defined but never used.","'AlertCircle' is defined but never used.","'isLoading' is assigned a value but never used.","'User' is defined but never used.","'UploadedFile' is defined but never used.","'ErrorResponse' is defined but never used.","@typescript-eslint/no-use-before-define","'CheckCircle' was used before it was defined.","JSXIdentifier","noUseBeforeDefine","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"126","text":"127"},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'handleFile'. Either include it or remove the dependency array.","ArrayExpression",["128"],["129"],[0,6278],"import React, { useState } from 'react';\r\nimport { User, Bot, Copy, ExternalLink, ChevronDown, ChevronUp } from 'lucide-react';\r\nimport { cn, formatSimilarityScore, getSimilarityColor, copyToClipboard } from '../utils/helpers';\r\nimport { ChatMessage as ChatMessageType, Source } from '../types';\r\n\r\n// Import CheckCircle for the copied state\r\nimport { CheckCircle } from 'lucide-react';\r\n\r\ninterface ChatMessageProps {\r\n  message: ChatMessageType;\r\n  className?: string;\r\n}\r\n\r\nexport const ChatMessage: React.FC<ChatMessageProps> = ({\r\n  message,\r\n  className\r\n}) => {\r\n  const [showSources, setShowSources] = useState(false);\r\n  const [copied, setCopied] = useState(false);\r\n\r\n  const handleCopy = async () => {\r\n    const success = await copyToClipboard(message.answer);\r\n    if (success) {\r\n      setCopied(true);\r\n      setTimeout(() => setCopied(false), 2000);\r\n    }\r\n  };\r\n\r\n  const toggleSources = () => {\r\n    setShowSources(!showSources);\r\n  };\r\n\r\n  return (\r\n    <div className={cn('space-y-4', className)}>\r\n      {/* User Query */}\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0 w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center\">\r\n          <User className=\"h-4 w-4 text-primary-600\" />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"bg-gray-100 rounded-lg p-4\">\r\n            <p className=\"text-gray-900\">{message.query}</p>\r\n          </div>\r\n          <p className=\"text-xs text-gray-500 mt-1\">\r\n            {new Date(message.timestamp).toLocaleString()}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bot Response */}\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0 w-8 h-8 bg-success-100 rounded-full flex items-center justify-center\">\r\n          <Bot className=\"h-4 w-4 text-success-600\" />\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"bg-white border rounded-lg p-4\">\r\n            <div className=\"flex items-start justify-between\">\r\n              <div className=\"flex-1\">\r\n                <p className=\"text-gray-900 whitespace-pre-wrap\">\r\n                  {message.answer}\r\n                </p>\r\n              </div>\r\n              <button\r\n                onClick={handleCopy}\r\n                className=\"ml-2 p-1 text-gray-400 hover:text-gray-600 transition-colors\"\r\n                title=\"Copy answer\"\r\n              >\r\n                {copied ? (\r\n                  <CheckCircle className=\"h-4 w-4 text-success-600\" />\r\n                ) : (\r\n                  <Copy className=\"h-4 w-4\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n            \r\n            {/* Metadata */}\r\n            <div className=\"mt-3 pt-3 border-t border-gray-100\">\r\n              <div className=\"flex items-center justify-between text-xs text-gray-500\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <span>Processing: {message.metadata.processing_time.toFixed(2)}s</span>\r\n                  <span>Model: {message.metadata.model_used}</span>\r\n                  {message.metadata.cached && (\r\n                    <span className=\"text-success-600\">Cached</span>\r\n                  )}\r\n                </div>\r\n                <span>{message.metadata.retrieved_chunks} sources</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sources */}\r\n      {message.sources.length > 0 && (\r\n        <div className=\"ml-11\">\r\n          <button\r\n            onClick={toggleSources}\r\n            className=\"flex items-center space-x-2 text-sm text-primary-600 hover:text-primary-700 transition-colors\"\r\n          >\r\n            <span>\r\n              {showSources ? 'Hide' : 'Show'} Sources ({message.sources.length})\r\n            </span>\r\n            {showSources ? (\r\n              <ChevronUp className=\"h-4 w-4\" />\r\n            ) : (\r\n              <ChevronDown className=\"h-4 w-4\" />\r\n            )}\r\n          </button>\r\n          \r\n          {showSources && (\r\n            <div className=\"mt-3 space-y-3\">\r\n              {message.sources.map((source, index) => (\r\n                <SourceCard key={index} source={source} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface SourceCardProps {\r\n  source: Source;\r\n}\r\n\r\nconst SourceCard: React.FC<SourceCardProps> = ({ source }) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 border rounded-lg p-3\">\r\n      <div className=\"flex items-start justify-between\">\r\n        <div className=\"flex-1\">\r\n          <div className=\"flex items-center space-x-2 mb-2\">\r\n            <span className=\"text-sm font-medium text-gray-900\">\r\n              Source {source.rank}\r\n            </span>\r\n            <span className={cn(\r\n              'text-xs px-2 py-1 rounded-full',\r\n              getSimilarityColor(source.similarity_score)\r\n            )}>\r\n              {formatSimilarityScore(source.similarity_score)}\r\n            </span>\r\n          </div>\r\n          \r\n          <div className=\"text-sm text-gray-600\">\r\n            <p className=\"font-medium\">\r\n              {source.metadata.source_file}\r\n              {source.metadata.page_number && (\r\n                <span className=\"text-gray-500\"> (Page {source.metadata.page_number})</span>\r\n              )}\r\n            </p>\r\n            \r\n            <p className=\"mt-1 text-gray-700\">\r\n              {expanded ? source.text : `${source.text.substring(0, 200)}...`}\r\n            </p>\r\n            \r\n            {source.text.length > 200 && (\r\n              <button\r\n                onClick={() => setExpanded(!expanded)}\r\n                className=\"text-primary-600 hover:text-primary-700 text-xs mt-1\"\r\n              >\r\n                {expanded ? 'Show less' : 'Show more'}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={() => window.open(`#source-${source.rank}`, '_blank')}\r\n          className=\"ml-2 p-1 text-gray-400 hover:text-gray-600 transition-colors\"\r\n          title=\"Open source\"\r\n        >\r\n          <ExternalLink className=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};",{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},"Update the dependencies array to be: [handleFile]",{"range":"133","text":"134"},{"range":"135","text":"134"},[1551,1553],"[handleFile]",[1816,1818]]